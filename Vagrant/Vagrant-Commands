vagrant                                                 # after installing Vagrant, verify the installation worked or not

[Version]
vagrant version
vagrant --version

[Box]
vagrant box add VAGRANT_CLOUD_USER_NAME/BOX_IMAGE_NAME
vagrant box add VAGRANT_CLOUD_USER_NAME/BOX_IMAGE_NAME HTTP_URL_ADDRESS
vagrant box list                                                                       # lists all the boxes that are installed into Vagrant
vagrant box list -i                                                                    # additional box information
vagrant box outdated                                    
vagrant box outdated --force
vagrant box outdated --global
vagrant box update
vagrant box remove VAGRANT_CLOUD_USER_NAME/BOX_IMAGE_NAME
vagrant box remove VAGRANT_CLOUD_USER_NAME/BOX_IMAGE_NAME --force
vagrant box prune                                                                     # removes old versions of installed boxes
vagrant box prune --force
vagrant box prune --name VAGRANT_CLOUD_USER_NAME/BOX_IMAGE_NAME                       # specific box name to check for outdated versions

[Init]                                                                                # initializes the current directory to be a Vagrant environment by creating an initial Vagrantfile
vagrant init                                                                          # current directory it created a Vagrantfile need to be start from scratch
vagrant init VAGRANT_CLOUD_USER_NAME/BOX_IMAGE_NAME                                   # directly adding 
vagrant init VAGRANT_CLOUD_USER_NAME/BOX_IMAGE_NAME HTTP_URL_ADDRESS
vagrant init -m VAGRANT_CLOUD_USER_NAME/BOX_IMAGE_NAME                                # minimal Vagrantfile
vagrant init --minimal VAGRANT_CLOUD_USER_NAME/BOX_IMAGE_NAME
vagrant init -f VAGRANT_CLOUD_USER_NAME/BOX_IMAGE_NAME                                # overwrite an existing Vagrantfile in current path
vagrant init --force VAGRANT_CLOUD_USER_NAME/BOX_IMAGE_NAME

[Validate]                                              # it validates the Vagrantfile
vagrant validate

[Up]
vagrant up
vagrant up --debug                                      # debug level output
vagrant up --debug &> FILE_NAME                         # saving the output to a file, need to redirect stderr and stdout using &>
vagrant up ID                                           # the machine id found with 'vagrant global-status'
vagrant up NAME                                         # name of machine defined in Vagrantfile, name to specify the Vagrant machine in Vagrantfile

[Status]                                                # tells the state of the machines Vagrant
vagrant status
vagrant status ID
vagrant status NAME

[Provision]
vagrant provision

[Port]
vagrant port
vagrant port ID
vagrant port NAME

[SSH]
vagrant ssh
vagrant ssh ID
vagrant ssh NAME

[SSH Config]                                            # valid configuration for an SSH config file to SSH into the running Vagrant machine from ssh directly (instead of using vagrant ssh)
vagrant ssh-config
vagrant ssh-config ID
vagrant ssh-config NAME

[Stop]
vagrant stop

[Resume]
vagrant resume
vagrant resume ID
vagrant resume NAME

[Reload]                                                # usually required for changes made in the Vagrantfile to take effect, after making any modifications to the Vagrantfile, a reload should be called
vagrant reload
vagrant reload ID
vagrant reload NAME

[Share]
vagrant plugin install vagrant-share
◉ HTTP Sharing
vagrant share                                           # HTTP server is running in Vagrant environment with default port no
vagrant share --http PORT_NO                            # port of the HTTP server running in the Vagrant environment
vagrant share --https PORT_NO                           # port of an HTTPS server running in the Vagrant environment
vagrant share --disable-http                            # disables the HTTP endpoint to Vagrant environment
◉ SSH Sharing
vagrant share --ssh                                     # enables SSH sharing, by default it use 22
vagrant share --ssh-no-password                         # disables the encryption of SSH keypair created when SSH sharing is enabled
vagrant share --ssh-port PORT_NO                        # port of the SSH server running in the Vagrant environment
vagrant share --ssh-once                                # allows SSH access only once, after the first attempt to connect via SSH to the Vagrant, the generated keypair is destroyed

[Suspend]
vagrant suspend
vagrant suspend ID
vagrant suspend NAME

[Halt]                                                  # shuts down the running machine Vagrant
vagrant halt
vagrant halt -f
vagrant halt --force
vagrant halt ID
vagrant halt ID -f
vagrant halt ID --force
vagrant halt NAME
vagrant halt NAME -f
vagrant halt NAME --force

[Global Status]                                         # tells the state of all active Vagrant environments on the system for the currently logged in user
vagrant global-status
vagrant global-status --prune

[HashiCorp Vagrant Cloud]
vagrant login --check                                   # check if the current user is authenticated or not
vagrant login                                           # it prompt username & password to login Vagrant Cloud
vagrant login --token TOKEN_ID                          # securely authenticate with Vagrant Cloud using a token
vagrant login --logout
vagrant cloud auth login --check                        # check if the current user is authenticated or not
vagrant cloud auth login                                # it prompt username & password to login Vagrant Cloud
vagrant cloud auth login --token TOKEN_ID               # securely authenticate with Vagrant Cloud using a token
vagrant cloud auth logout                               #

[Destroy]
vagrant destroy
vagrant destroy -f
vagrant destroy ID
vagrant destroy NAME
